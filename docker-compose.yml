version: "3.8"
services:
  backend:
    restart: always
    build:
      context: .
    ports:
      - 3030:3030
      - 9229:9229
    env_file:
      - ./.env
    environment:
      - NODE_ENV=development
    command: >
      sh -c 'if [ "$NODE_ENV" = "local" ]; then
              nodemon --inspect=0.0.0.0:9229 ./src/bin/www;
            elif [ "$NODE_ENV" = "development" ]; then
              node --inspect=0.0.0.0:9229 ./src/bin/www;
            else
              node ./src/bin/www;
            fi'
    depends_on:
      - db
      - hasura

  db:
    image: postgres:14.5-alpine
    restart: always
    container_name: postgres-database
    env_file:
      - ./.env
    volumes:
      - postgresdb:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgbouncer:
    image: pgbouncer/pgbouncer:1.12.0
    restart: always
    ports:
      - 6432:6432
    env_file:
      - ./.env
    depends_on:
      db:
        condition: service_healthy

  hasura:
    image: hasura/graphql-engine:v2.35.0
    ports:
      - "${HASURA_DOCKER_EXPOSED_PORT}:8080"
    restart: always
    env_file:
      - ./.env

    depends_on:
      - pgbouncer
      - api
    links:
      - pgbouncer
      - api

volumes:
  postgresdb:
  redis:
    driver: local
